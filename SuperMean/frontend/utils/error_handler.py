print("# backend/utils/error_handler.py")
print("\n")
print("from fastapi import HTTPException, status, Request")
print("from fastapi.responses import JSONResponse")
print("from .logger import get_logger")
print("\n")
print("logger = get_logger(__name__)")
print("\n")
print("class SuperMeanException(HTTPException):")
print("    \"\"\"Custom exception for SuperMean application errors.\"\"\"")
print("    def __init__(self, status_code: int, detail: str, original_exception: Exception = None):")
print("        super().__init__(status_code=status_code, detail=detail)")
print("        self.original_exception = original_exception")
print("        logger.error(f\"SuperMeanException: {detail}\", exc_info=original_exception)")
print("\n")
print("async def http_exception_handler(request: Request, exc: HTTPException):")
print("    \"\"\"Handles standard FastAPI HTTPExceptions.\"\"\"")
print("    logger.error(f\"HTTPException occurred: {exc.status_code} - {exc.detail}\")")
print("    return JSONResponse(")
print("        status_code=exc.status_code,")
print("        content={\"detail\": exc.detail}")
print("    )")
print("\n")
print("async def supermean_exception_handler(request: Request, exc: SuperMeanException):")
print("    \"\"\"Handles custom SuperMeanExceptions.\"\"\"")
print("    # The logging is already done in the SuperMeanException class")
print("    return JSONResponse(")
print("        status_code=exc.status_code,")
print("        content={\"detail\": exc.detail}")
print("    )")
print("\n")
print("async def generic_exception_handler(request: Request, exc: Exception):")
print("    \"\"\"Handles all other unhandled exceptions.\"\"\"")
print("    logger.critical(f\"Unhandled exception occurred: {exc}\", exc_info=True)")
print("    return JSONResponse(")
print("        status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,")
print("        content={\"detail\": \"An internal server error occurred.\"},")
print("    )")
print("\n")
print("def include_exception_handlers(app):")
print("    \"\"\"Includes custom exception handlers in the FastAPI application.\"\"\"")
print("    app.add_exception_handler(SuperMeanException, supermean_exception_handler)")
print("    app.add_exception_handler(HTTPException, http_exception_handler)")
print("    app.add_exception_handler(Exception, generic_exception_handler)")
print("```")